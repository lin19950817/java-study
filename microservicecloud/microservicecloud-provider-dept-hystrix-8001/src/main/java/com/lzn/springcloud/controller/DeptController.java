package com.lzn.springcloud.controller;import com.lzn.springcloud.entities.Dept;import com.lzn.springcloud.service.IDeptService;import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/dept")public class DeptController {    @Autowired    private IDeptService deptService;    @PostMapping("/add")    public boolean add(@RequestBody Dept dept) {        return deptService.add(dept);    }    @PostMapping("/get/{id}")    // 一旦调用服务方法失败并抛出错误信息后，会自动调用 @HystrixCommand标注好的 fallbackMethod调用类中的指定方法    @HystrixCommand(fallbackMethod = "processHystrix_Get")    public Dept get(@PathVariable("id") Long id) {        Dept dept =  deptService.get(id);        if (null == dept) {            throw new RuntimeException("该 ID：" + id + "没有对应的信息");        }        return dept;    }    @PostMapping("/list")    public List<Dept> list() {        return deptService.list();    }    public Dept processHystrix_Get(@PathVariable("id") Long id) {        return new Dept().setDeptno(id).setDname("该 ID：" + id + "没有对应的信息，null--@HystrixCommand").setDb_source("no this database in MySQL");    }}